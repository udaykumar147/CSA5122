#include <stdio.h>
#include <string.h>
#include <ctype.h>
void monoalphabeticSubstitutionEncrypt(char *plaintext, char *key) {
    int i;
    for (i = 0; plaintext[i] != '\0'; ++i) {
        char ch = plaintext[i];
        if (isalpha(ch)) {
            if (islower(ch)) {
                plaintext[i] = tolower(key[ch - 'a']);
            } else if (isupper(ch)) {
                plaintext[i] = toupper(key[ch - 'A']);
            }
        }
    }
}

int main() {
    char plaintext[100];
    char key[26];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0;
    printf("Enter the substitution key (26 letters): ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = 0;
    if (strlen(key) != 26) {
        printf("Substitution key must be 26 letters long.\n");
        return 1;
    }
    for (int i = 0; i < 26; i++) {
        if (!isalpha(key[i])) {
            printf("Substitution key must contain only letters.\n");
            return 1;
        }
    }
    monoalphabeticSubstitutionEncrypt(plaintext, key);
    printf("Encrypted message: %s\n", plaintext);
    return 0;
}
