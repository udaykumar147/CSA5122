#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define ROWS 5
#define COLS 5

void removeSpaces(char *str) {
    int count = 0;
    for (int i = 0; str[i]; i++) {
        if (str[i] != ' ')
            str[count++] = str[i];
    }
    str[count] = '\0';
}

void findPosition(char matrix[ROWS][COLS], char ch, int *row, int *col) {
    if (ch == 'J')
        ch = 'I';
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encryptPlayfair(char *plaintext, char matrix[ROWS][COLS]) {
    removeSpaces(plaintext);

    // Adjust the length of the plaintext if it's odd
    int len = strlen(plaintext);
    if (len % 2 != 0) {
        plaintext[len] = 'X';
        plaintext[len + 1] = '\0';
        len++;
    }

    for (int i = 0; i < len; i += 2) {
        int row1, col1, row2, col2;
        findPosition(matrix, plaintext[i], &row1, &col1);
        findPosition(matrix, plaintext[i + 1], &row2, &col2);

        if (row1 == row2) {
            printf("%c%c ", matrix[row1][(col1 + 1) % COLS], matrix[row2][(col2 + 1) % COLS]);
        } else if (col1 == col2) {
            printf("%c%c ", matrix[(row1 + 1) % ROWS][col1], matrix[(row2 + 1) % ROWS][col2]);
        } else {
            printf("%c%c ", matrix[row1][col2], matrix[row2][col1]);
        }
    }
    printf("\n");
}

int main() {
    char matrix[ROWS][COLS] = {
        {'M', 'F', 'H', 'I', 'J'},
        {'U', 'N', 'O', 'P', 'Q'},
        {'Z', 'V', 'W', 'X', 'Y'},
        {'E', 'L', 'A', 'R', 'G'},
        {'D', 'S', 'T', 'B', 'C'}
    };

    char plaintext[] = "Must see you over Cadogan West. Coming at once.";
    
    printf("Encrypted Message:\n");
    encryptPlayfair(plaintext, matrix);

    return 0;
}
