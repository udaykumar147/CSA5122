#include <stdio.h>
#include <string.h>
#include <ctype.h>
void rail_fence_encrypt(char *plaintext, int rails, char *ciphertext) {
    int len = strlen(plaintext);
    int rail_lens[rails];
    memset(rail_lens, 0, sizeof(rail_lens));

    int i, j = 0, down = 1;
    for (i = 0; i < len; ++i) {
        rail_lens[j]++;
        j += down ? 1 : -1;
        if (j == 0 || j == rails - 1)
            down = !down;
    }

    int k = 0;
    for (i = 0; i < rails; ++i) {
        int index = i;
        for (j = 0; j < rail_lens[i]; ++j) {
            ciphertext[k++] = plaintext[index];
            index += (2 * (rails - 1 - i)) ? 2 * i : 0;
            if (i != 0 && i != rails - 1 && index < len) {
                ciphertext[k++] = plaintext[index];
                index += 2 * (rails - 1 - i);
            }
        }
    }
    ciphertext[k] = '\0';
}
void rail_fence_decrypt(char *ciphertext, int rails, char *plaintext) {
    int len = strlen(ciphertext);
    int rail_lens[rails];
    memset(rail_lens, 0, sizeof(rail_lens));

    int i, j = 0, down = 1;
    for (i = 0; i < len; ++i) {
        rail_lens[j]++;
        j += down ? 1 : -1;
        if (j == 0 || j == rails - 1)
            down = !down;
    }

    int k = 0;
    for (i = 0; i < rails; ++i) {
        int index = i;
        for (j = 0; j < rail_lens[i]; ++j) {
            plaintext[index] = ciphertext[k++];
            index += (2 * (rails - 1 - i)) ? 2 * i : 0;
            if (i != 0 && i != rails - 1 && index < len) {
                plaintext[index] = ciphertext[k++];
                index += 2 * (rails - 1 - i);
            }
        }
    }
    plaintext[len] = '\0';
}

int main() {
    char plaintext[100], ciphertext[100], decryptedtext[100];
    int rails;

    // Input plaintext and number of rails
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    printf("Enter number of rails: ");
    scanf("%d", &rails);

    // Remove newline character from plaintext
    plaintext[strcspn(plaintext, "\n")] = '\0';

    // Encrypt the plaintext
    rail_fence_encrypt(plaintext, rails, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    // Decrypt the ciphertext
    rail_fence_decrypt(ciphertext, rails, decryptedtext);
    printf("Decrypted text: %s\n", decryptedtext);

    return 0;
}
