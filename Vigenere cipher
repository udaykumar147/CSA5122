#include <stdio.h>
#include <string.h>
#include <ctype.h>
void vigenere_encrypt(char *plaintext, char *key) {
    int i, j;
    int plaintextLen = strlen(plaintext);
    int keyLen = strlen(key);

    for (i = 0, j = 0; i < plaintextLen; ++i, ++j) {
        if (j == keyLen)
            j = 0;

        if (isalpha(plaintext[i])) {
            if (islower(plaintext[i]))
                plaintext[i] = 'a' + (plaintext[i] - 'a' + tolower(key[j]) - 'a') % 26;
            else if (isupper(plaintext[i]))
                plaintext[i] = 'A' + (plaintext[i] - 'A' + toupper(key[j]) - 'A') % 26;
        }
    }
}
void vigenere_decrypt(char *ciphertext, char *key) {
    int i, j;
    int ciphertextLen = strlen(ciphertext);
    int keyLen = strlen(key);

    for (i = 0, j = 0; i < ciphertextLen; ++i, ++j) {
        if (j == keyLen)
            j = 0;

        if (isalpha(ciphertext[i])) {
            if (islower(ciphertext[i]))
                ciphertext[i] = 'a' + (ciphertext[i] - 'a' - tolower(key[j]) + 'a' + 26) % 26;
            else if (isupper(ciphertext[i]))
                ciphertext[i] = 'A' + (ciphertext[i] - 'A' - toupper(key[j]) + 'A' + 26) % 26;
        }
    }
}

int main() {
    char plaintext[100], ciphertext[100], key[100];
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    printf("Enter key: ");
    fgets(key, sizeof(key), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';
    strcpy(ciphertext, plaintext);
    vigenere_encrypt(ciphertext, key);
    printf("Encrypted text: %s\n", ciphertext);
    vigenere_decrypt(ciphertext, key);
    printf("Decrypted text: %s\n", ciphertext);
    return 0;
}
